TODO / NOTES:
- fix UNSAFE bitboard updating problem in negamax?
- null move pruning: add 'has non-pawn material' condition
- internal iterative deepening (for move ordering)
- experiment with LMR conditions
- in move generation function end we return num_moves instead of just j
- move scoring:
  - score promotions?
  - extra score if check? (or maybe search already has that covered)
- add 'go perft' functionality
- add "board has non-pawn material" condition in null move pruning
- experiment with tt structure to reduce size
- clear the TT on UCI position command
- should there be a TT update on null move cutoffs?
- TT in qsearch?
- history move heuristic: could take it or leave it
- question: why does stockfish use depth-limited qsearch?
- when terminating search, should we actually be returning 0?

REFACTORS:
- engine.cpp/h -> search.cpp/h
- board::num_moves_played -> board::ply

TO TRY/RESEARCH:
- lazy SMP
- delta pruning
- futility pruning
- razoring
- reverse futility pruning
- static exchange evaluation pruning
- multi-cut
- multi-PV

DONE:
- implement PST
- negamax a/b
- qsearch
- mvv/lva move ordering
- bishop pair in evaluation
- killer/history heuristics
- iterative deepening
- check extensions
- PVS
- LMR
- aspiration windows
